substitutions:
  _HELM_VERSION: 2.14.3
steps:
  - id: 'Decrypt Helm SSH keys'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-c'
      - |
        gcloud kms decrypt --ciphertext-file=helm-ssh/ca.pem.enc --plaintext-file=helm-ssh/ca.pem --location=global --keyring=build --key=helm-ssh && \
        gcloud kms decrypt --ciphertext-file=helm-ssh/cert.pem.enc --plaintext-file=helm-ssh/cert.pem --location=global --keyring=build --key=helm-ssh && \
        gcloud kms decrypt --ciphertext-file=helm-ssh/key.pem.enc --plaintext-file=helm-ssh/key.pem --location=global --keyring=build --key=helm-ssh
  - name: 'gcr.io/cloud-builders/kubectl'
    id: Deploy to GKE cluster
    entrypoint: bash
    args:
      - '-c'
      - |
        bash /builder/kubectl.bash version && \
        kubectl get po -n knowhub && \
        curl -4 -L https://get.helm.sh/helm-v${_HELM_VERSION}-linux-amd64.tar.gz -o /builder/helm.tar.gz && \
        tar -zxvf /builder/helm.tar.gz -C /builder && \
        mv /builder/linux-amd64/helm /usr/local/bin/helm
        helm init --client-only && \
        cd getting-started && \
        helm upgrade getting-started . --install --namespace knowhub -f images.yaml -f values.yaml --tls --tls-ca-cert helm-ssh/ca.pem --tls-cert helm-ssh/cert.pem --tls-key helm-ssh/key.pem
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=europe-west1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=knowhub'
      - 'CLOUDSDK_CORE_PROJECT=endless-tractor-248005'