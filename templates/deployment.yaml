apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ include "getting-started.fullname" . }}
    labels:
        {{ include "getting-started.labels" . | indent 4 }}
spec:
    replicas: {{ .Values.replicaCount }}
    selector:
        matchLabels:
            app.kubernetes.io/name: {{ include "getting-started.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
    template:
        metadata:
            labels:
                app.kubernetes.io/name: {{ include "getting-started.name" . }}
                app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
                {{- with .Values.imagePullSecrets }}
            imagePullSecrets:
                {{- toYaml . | nindent 8 }}
                {{- end }}
            containers:
                - name: {{ .Chart.Name }}
                  image: "eu.gcr.io/knowhub-new/quarkus-tutorial:{{ index .Values "tag" "quarkus-tutorial" }}"
                  imagePullPolicy: IfNotPresent
                  ports:
                      - name: backend
                        containerPort: {{ .Values.service.backendPort }}
                        protocol: TCP
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: backend
                  readinessProbe:
                      httpGet:
                          path: /health
                          port: backend
                        {{- with .Values.resources }}
                  resources:
                        {{- toYaml .Values.resources | nindent 12 }}
                    {{- end }}
                - name: esp
                  image: gcr.io/endpoints-release/endpoints-runtime:1
                  args: [
                      "--http_port", "{{ .Values.service.httpPort}}",
                      "--backend", "127.0.0.1:{{ .Values.service.backendPort}}",
                      "--service", "app.endpoints.{{ .Values.projectId}}.cloud.goog",
                      "--rollout_strategy", "managed"
                  ]
                  ports:
                      - containerPort: {{ .Values.service.httpPort }}
                {{- with .Values.nodeSelector }}
            nodeSelector:
                {{- toYaml . | nindent 8 }}
                {{- end }}
                {{- with .Values.affinity }}
            affinity:
                {{- toYaml . | nindent 8 }}
                {{- end }}
                {{- with .Values.tolerations }}
            tolerations:
            {{- toYaml . | nindent 8 }}
        {{- end }}
